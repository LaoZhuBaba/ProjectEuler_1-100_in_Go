// Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
// 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
// It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
// Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and
// D = |Pk − Pj| is minimised; what is the value of D?

package challenges

import "fmt"

const p44Max = 10001

var pentList [p44Max]int
var isPent = make(map[int]bool)

func pentangulate(n int) int {
	return n * (3*n - 1) / 2
}

func Challenge44() {

	for n := 1; n < p44Max; n++ {
		p := pentangulate(n)
		isPent[p] = true
		pentList[n] = p
	}
	for n1 := 1; n1 < p44Max; n1++ {
		// fmt.Printf("n1: %d\n", pentList[n1])
		for n2 := 1; n2 < n1; n2++ {
			d := pentList[n1] - pentList[n2]
			if isPent[d] {
				sum := pentList[n1] + pentList[n2]
				if isPent[sum] {
					fmt.Printf("n1 is %d, n2 is %d, pentList[n1] is %d, pentList[n2] is %d: diff is %d and sum is %d\n",
						n1, n2, pentList[n1], pentList[n2], d, sum)
				}
			}
		}
	}
}
