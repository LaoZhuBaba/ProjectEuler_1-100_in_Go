// Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

// Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
// Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
// Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
// It can be verified that T285 = P165 = H143 = 40755.

// Find the next triangle number that is also pentagonal and hexagonal.
package challenges

import (
	"fmt"
	"math"
)

func isPen(n uint64) bool {
	pentRoot := (math.Sqrt(float64(24*n+1)) + 1) / 6
	return pentRoot == float64(uint64(pentRoot))

}

func isHex(n uint64) bool {
	hexRoot := (math.Sqrt(float64(8*n+1)) + 1) / 4
	return hexRoot == float64(uint64(hexRoot))

}

func isTri(n uint64) bool {
	triRoot := (math.Sqrt(float64(8*n+1)) - 1) / 2
	return triRoot == float64(uint64(triRoot))
}
func Challenge45() {

	for n := uint64(1); n < 5_000_000_000; n++ {
		if isTri(n) {
			if isPen(n) {
				if isHex(n) {
					fmt.Printf("All three: %d\n", n)
				}
			}
		}
	}
}
